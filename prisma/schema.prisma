generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model answers {
  id          String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  response_id String?    @db.Uuid
  question_id String?    @db.Uuid
  value       String
  questions   questions? @relation(fields: [question_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  responses   responses? @relation(fields: [response_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model forms {
  id          String      @id @db.Uuid
  user_id     String?     @db.Uuid
  name        String
  description String
  url         String
  created_at  DateTime?   @default(now()) @db.Timestamp(6)
  deleted_at  DateTime?   @db.Timestamp(6)
  published   Boolean?    @default(false)
  settings    Json        @default("{}")
  users       users?      @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  questions   questions[]
  responses   responses[]
}

model questions {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  form_id     String?   @db.Uuid
  label       String
  type        String
  required    Boolean?  @default(false)
  options     String[]
  placeholder String
  answers     answers[]
  forms       forms?    @relation(fields: [form_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model responses {
  id           String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  form_id      String?   @db.Uuid
  submitted_at DateTime? @default(now()) @db.Timestamp(6)
  metadata     Json?     @default("{}")
  answers      answers[]
  forms        forms?    @relation(fields: [form_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model users {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name       String
  email      String    @unique
  dp_url     String?
  created_at DateTime? @default(now()) @db.Timestamp(6)
  forms      forms[]
}
